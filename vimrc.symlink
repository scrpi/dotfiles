scriptencoding utf-8
set encoding=utf-8

""""" Vundle Setup
set nocompatible              " be iMproved, required
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'

Plugin 'christoomey/vim-tmux-navigator'
Plugin 'vim-airline/vim-airline'
Plugin 'airblade/vim-gitgutter'
Plugin 'tpope/vim-fugitive'
Plugin 'ctrlpvim/ctrlp.vim'
Plugin 'majutsushi/tagbar'
Plugin 'scrooloose/nerdtree'

Plugin 'nanotech/jellybeans.vim'

" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required
" To ignore plugin indent changes, instead use:
"filetype plugin on
"
" Brief help
" :PluginList       - lists configured plugins
" :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate
" :PluginSearch foo - searches for foo; append `!` to refresh local cache
" :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal
"
" see :h vundle for more details or wiki for FAQ
" Put your non-Plugin stuff after this line


" Automatic reloading of .vimrc
autocmd! bufwritepost .vimrc source %

" Better copy & paste
" When you want to paste large blocks of code into vim, press F2 before you
" paste. At the bottom you should see ``-- INSERT (paste) --``.
set pastetoggle=<F2>
set clipboard=unnamed

" Tab/space handling
set tabstop=4
set shiftwidth=4
set noexpandtab

function TabToggle()
    if &expandtab
        set tabstop=8
        set shiftwidth=8
        set noexpandtab
    else
        set tabstop=4
        set shiftwidth=4
        set expandtab
    endif
endfunction
nmap <F9> :execute TabToggle()<CR>

set cindent
set cinoptions+=g0

set ruler               " show line and column number
syntax on               " syntax highlighting

set relativenumber      " show line numbers
set number
set nowrap              " don't automatically wrap on load
set fo-=t               " don't automatically wrap text when typing

set history=700
set undolevels=700

" make search case insensitive
set hlsearch
set incsearch
set ignorecase
set smartcase

" Disable stupid backup and swap files - they trigger too many events
" for file system watchers
set nobackup
set nowritebackup
set noswapfile

" delete buffers with ,d without closing split
nmap ,d :b#<bar>bd#<CR>

" Show trailing whitespace:
highlight ExtraWhitespace ctermbg=red guibg=red
autocmd ColorScheme * highlight ExtraWhitespace ctermbg=red guibg=red
match ExtraWhitespace /\s\+$/

" Colour Scheme
set t_Co=256
color jellybeans

" ctags stuff
set tags=.tags;/

" Vim Airline stuff
set laststatus=2
let g:airline#extensions#tabline#enabled = 1
let g:airline_powerline_fonts=1
let g:airline#extensions#whitespace#enabled = 0

" vim-gitgutter
set updatetime=250

" tagbar
nnoremap <silent> <Leader>b :TagbarToggle<CR>

" tmux
let g:tmux_navigator_no_mappings = 1

nnoremap <silent> <c-h> :TmuxNavigateLeft<cr>
nnoremap <silent> <c-j> :TmuxNavigateDown<cr>
nnoremap <silent> <c-k> :TmuxNavigateUp<cr>
nnoremap <silent> <c-l> :TmuxNavigateRight<cr>

" ctrl-p
let g:ctrlp_working_path_mode = 'ra'

" vim buffers
set hidden
set wildchar=<Tab> wildmenu wildmode=full
:nnoremap <Tab> :bnext<CR>
:nnoremap <S-Tab> :bprevious<CR>

" NERDTree
map <C-n> :NERDTreeToggle<CR>

nnoremap <leader>q :bp<cr>:bd #<cr>

" Break habit of using arrow keys
noremap <Up> <NOP>
noremap <Down> <NOP>
noremap <Left> <NOP>
noremap <Right> <NOP>

" tell it to use an undo file
set undofile
" " set a directory to store the undo history
set undodir=~/.vimundo/

set backspace=2

" YCM stuff
highlight Pmenu ctermfg=15 ctermbg=0
let g:ycm_extra_conf_globlist = ['~/work/*', ]
let g:ycm_show_diagnostics_ui = 0
let g:ycm_autoclose_preview_window_after_completion = 1
let g:ycm_autoclose_preview_window_after_insertion = 1

" (Hopefully) removes the delay when hitting esc in insert mode
set noesckeys
set ttimeout
set ttimeoutlen=1

" Display extra whitespace
set list listchars=tab:»·,trail:·
highlight SpecialKey ctermbg=16 ctermfg=235

" copy to buffer
vmap <C-y> :w! ~/.vimbuffer<CR>
nmap <C-y> :.w! ~/.vimbuffer<CR>
" " paste from buffer
map <C-o> :r ~/.vimbuffer<CR>
